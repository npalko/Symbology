import "Symbology.proto";

package symbology;

message SubscriptionRequest {
  repeated Security security = 1;
  repeated CounterParty counterParty = 2;
  enum Series {
    PRICE = 0;
  }
}

// Request: SeriesRequest
// Returns: PriceSeries or EventSeries
message SeriesRequest {
  optional int32 startDate = 1;     // start of data series
  optional int32 endDate = 2;       // end of data series
  optional int32 asOfDate = 3;      // data as it was known up to this date
  repeated Security security = 4;   // for which securities
  repeated CounterParty counteryParty = 5; // counter-party
  enum Series {                     // data requested
    OPEN_PRICE = 0;                 // time series (returns message Price)
    CLOSE_PRICE = 1;
    HIGH_PRICE = 2;
    LOW_PRICE = 3;
    VOLUME = 4;
    OPEN_INTEREST = 5;
    RETURN = 6;
    DIVIDEND = 7;                   // event series (returns message Event)
    SPLIT = 8;
  }
  optional bool eventAdjusted = 6;  // adjust data for EVENTS
  optional bool getRevision = 7;    // include revision history
  optional bool getSecurityId = 8;  // return the securityId for each request
  optional bool getDate = 9;        // return date for each request
}

// Request: EntityRequest. Request either a list of Ids, or a payload
// Returns: Response, with message corresponding to entity
message EntityRequest {
  repeated int32 id = 1;            // Id's requested for given Entity
  optional bytes payload = 2;
  enum Entity {
    CURRENCY = 0;
    COUNTRY = 1;
    MARKET = 2;
    INSTRUMENT = 3;
    COUNTER_PARTY = 4;
    COMPANY = 5;
    SECURITY = 6;
    SYMBOL = 7;
  }
}