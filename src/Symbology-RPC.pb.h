// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Symbology-RPC.proto

#ifndef PROTOBUF_Symbology_2dRPC_2eproto__INCLUDED
#define PROTOBUF_Symbology_2dRPC_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Symbology.pb.h"
// @@protoc_insertion_point(includes)

namespace symbology {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Symbology_2dRPC_2eproto();
void protobuf_AssignDesc_Symbology_2dRPC_2eproto();
void protobuf_ShutdownFile_Symbology_2dRPC_2eproto();

class SubscriptionRequest;
class SeriesRequest;
class EntityRequest;

enum SubscriptionRequest_Series {
  SubscriptionRequest_Series_PRICE = 0
};
bool SubscriptionRequest_Series_IsValid(int value);
const SubscriptionRequest_Series SubscriptionRequest_Series_Series_MIN = SubscriptionRequest_Series_PRICE;
const SubscriptionRequest_Series SubscriptionRequest_Series_Series_MAX = SubscriptionRequest_Series_PRICE;
const int SubscriptionRequest_Series_Series_ARRAYSIZE = SubscriptionRequest_Series_Series_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubscriptionRequest_Series_descriptor();
inline const ::std::string& SubscriptionRequest_Series_Name(SubscriptionRequest_Series value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubscriptionRequest_Series_descriptor(), value);
}
inline bool SubscriptionRequest_Series_Parse(
    const ::std::string& name, SubscriptionRequest_Series* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscriptionRequest_Series>(
    SubscriptionRequest_Series_descriptor(), name, value);
}
enum SeriesRequest_Series {
  SeriesRequest_Series_OPEN_PRICE = 0,
  SeriesRequest_Series_CLOSE_PRICE = 1,
  SeriesRequest_Series_HIGH_PRICE = 2,
  SeriesRequest_Series_LOW_PRICE = 3,
  SeriesRequest_Series_VOLUME = 4,
  SeriesRequest_Series_OPEN_INTEREST = 5,
  SeriesRequest_Series_RETURN = 6,
  SeriesRequest_Series_DIVIDEND = 7,
  SeriesRequest_Series_SPLIT = 8
};
bool SeriesRequest_Series_IsValid(int value);
const SeriesRequest_Series SeriesRequest_Series_Series_MIN = SeriesRequest_Series_OPEN_PRICE;
const SeriesRequest_Series SeriesRequest_Series_Series_MAX = SeriesRequest_Series_SPLIT;
const int SeriesRequest_Series_Series_ARRAYSIZE = SeriesRequest_Series_Series_MAX + 1;

const ::google::protobuf::EnumDescriptor* SeriesRequest_Series_descriptor();
inline const ::std::string& SeriesRequest_Series_Name(SeriesRequest_Series value) {
  return ::google::protobuf::internal::NameOfEnum(
    SeriesRequest_Series_descriptor(), value);
}
inline bool SeriesRequest_Series_Parse(
    const ::std::string& name, SeriesRequest_Series* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SeriesRequest_Series>(
    SeriesRequest_Series_descriptor(), name, value);
}
enum EntityRequest_Entity {
  EntityRequest_Entity_CURRENCY = 0,
  EntityRequest_Entity_COUNTRY = 1,
  EntityRequest_Entity_MARKET = 2,
  EntityRequest_Entity_INSTRUMENT = 3,
  EntityRequest_Entity_COUNTER_PARTY = 4,
  EntityRequest_Entity_COMPANY = 5,
  EntityRequest_Entity_SECURITY = 6,
  EntityRequest_Entity_SYMBOL = 7
};
bool EntityRequest_Entity_IsValid(int value);
const EntityRequest_Entity EntityRequest_Entity_Entity_MIN = EntityRequest_Entity_CURRENCY;
const EntityRequest_Entity EntityRequest_Entity_Entity_MAX = EntityRequest_Entity_SYMBOL;
const int EntityRequest_Entity_Entity_ARRAYSIZE = EntityRequest_Entity_Entity_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityRequest_Entity_descriptor();
inline const ::std::string& EntityRequest_Entity_Name(EntityRequest_Entity value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityRequest_Entity_descriptor(), value);
}
inline bool EntityRequest_Entity_Parse(
    const ::std::string& name, EntityRequest_Entity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityRequest_Entity>(
    EntityRequest_Entity_descriptor(), name, value);
}
// ===================================================================

class SubscriptionRequest : public ::google::protobuf::Message {
 public:
  SubscriptionRequest();
  virtual ~SubscriptionRequest();
  
  SubscriptionRequest(const SubscriptionRequest& from);
  
  inline SubscriptionRequest& operator=(const SubscriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscriptionRequest& default_instance();
  
  void Swap(SubscriptionRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscriptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscriptionRequest& from);
  void MergeFrom(const SubscriptionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef SubscriptionRequest_Series Series;
  static const Series PRICE = SubscriptionRequest_Series_PRICE;
  static inline bool Series_IsValid(int value) {
    return SubscriptionRequest_Series_IsValid(value);
  }
  static const Series Series_MIN =
    SubscriptionRequest_Series_Series_MIN;
  static const Series Series_MAX =
    SubscriptionRequest_Series_Series_MAX;
  static const int Series_ARRAYSIZE =
    SubscriptionRequest_Series_Series_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Series_descriptor() {
    return SubscriptionRequest_Series_descriptor();
  }
  static inline const ::std::string& Series_Name(Series value) {
    return SubscriptionRequest_Series_Name(value);
  }
  static inline bool Series_Parse(const ::std::string& name,
      Series* value) {
    return SubscriptionRequest_Series_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .symbology.Security security = 1;
  inline int security_size() const;
  inline void clear_security();
  static const int kSecurityFieldNumber = 1;
  inline const ::symbology::Security& security(int index) const;
  inline ::symbology::Security* mutable_security(int index);
  inline ::symbology::Security* add_security();
  inline const ::google::protobuf::RepeatedPtrField< ::symbology::Security >&
      security() const;
  inline ::google::protobuf::RepeatedPtrField< ::symbology::Security >*
      mutable_security();
  
  // repeated .symbology.CounterParty counterParty = 2;
  inline int counterparty_size() const;
  inline void clear_counterparty();
  static const int kCounterPartyFieldNumber = 2;
  inline const ::symbology::CounterParty& counterparty(int index) const;
  inline ::symbology::CounterParty* mutable_counterparty(int index);
  inline ::symbology::CounterParty* add_counterparty();
  inline const ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >&
      counterparty() const;
  inline ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >*
      mutable_counterparty();
  
  // @@protoc_insertion_point(class_scope:symbology.SubscriptionRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::symbology::Security > security_;
  ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty > counterparty_;
  friend void  protobuf_AddDesc_Symbology_2dRPC_2eproto();
  friend void protobuf_AssignDesc_Symbology_2dRPC_2eproto();
  friend void protobuf_ShutdownFile_Symbology_2dRPC_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SubscriptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class SeriesRequest : public ::google::protobuf::Message {
 public:
  SeriesRequest();
  virtual ~SeriesRequest();
  
  SeriesRequest(const SeriesRequest& from);
  
  inline SeriesRequest& operator=(const SeriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeriesRequest& default_instance();
  
  void Swap(SeriesRequest* other);
  
  // implements Message ----------------------------------------------
  
  SeriesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeriesRequest& from);
  void MergeFrom(const SeriesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef SeriesRequest_Series Series;
  static const Series OPEN_PRICE = SeriesRequest_Series_OPEN_PRICE;
  static const Series CLOSE_PRICE = SeriesRequest_Series_CLOSE_PRICE;
  static const Series HIGH_PRICE = SeriesRequest_Series_HIGH_PRICE;
  static const Series LOW_PRICE = SeriesRequest_Series_LOW_PRICE;
  static const Series VOLUME = SeriesRequest_Series_VOLUME;
  static const Series OPEN_INTEREST = SeriesRequest_Series_OPEN_INTEREST;
  static const Series RETURN = SeriesRequest_Series_RETURN;
  static const Series DIVIDEND = SeriesRequest_Series_DIVIDEND;
  static const Series SPLIT = SeriesRequest_Series_SPLIT;
  static inline bool Series_IsValid(int value) {
    return SeriesRequest_Series_IsValid(value);
  }
  static const Series Series_MIN =
    SeriesRequest_Series_Series_MIN;
  static const Series Series_MAX =
    SeriesRequest_Series_Series_MAX;
  static const int Series_ARRAYSIZE =
    SeriesRequest_Series_Series_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Series_descriptor() {
    return SeriesRequest_Series_descriptor();
  }
  static inline const ::std::string& Series_Name(Series value) {
    return SeriesRequest_Series_Name(value);
  }
  static inline bool Series_Parse(const ::std::string& name,
      Series* value) {
    return SeriesRequest_Series_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional int32 startDate = 1;
  inline bool has_startdate() const;
  inline void clear_startdate();
  static const int kStartDateFieldNumber = 1;
  inline ::google::protobuf::int32 startdate() const;
  inline void set_startdate(::google::protobuf::int32 value);
  
  // optional int32 endDate = 2;
  inline bool has_enddate() const;
  inline void clear_enddate();
  static const int kEndDateFieldNumber = 2;
  inline ::google::protobuf::int32 enddate() const;
  inline void set_enddate(::google::protobuf::int32 value);
  
  // optional int32 asOfDate = 3;
  inline bool has_asofdate() const;
  inline void clear_asofdate();
  static const int kAsOfDateFieldNumber = 3;
  inline ::google::protobuf::int32 asofdate() const;
  inline void set_asofdate(::google::protobuf::int32 value);
  
  // repeated .symbology.Security security = 4;
  inline int security_size() const;
  inline void clear_security();
  static const int kSecurityFieldNumber = 4;
  inline const ::symbology::Security& security(int index) const;
  inline ::symbology::Security* mutable_security(int index);
  inline ::symbology::Security* add_security();
  inline const ::google::protobuf::RepeatedPtrField< ::symbology::Security >&
      security() const;
  inline ::google::protobuf::RepeatedPtrField< ::symbology::Security >*
      mutable_security();
  
  // repeated .symbology.CounterParty counteryParty = 5;
  inline int counteryparty_size() const;
  inline void clear_counteryparty();
  static const int kCounteryPartyFieldNumber = 5;
  inline const ::symbology::CounterParty& counteryparty(int index) const;
  inline ::symbology::CounterParty* mutable_counteryparty(int index);
  inline ::symbology::CounterParty* add_counteryparty();
  inline const ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >&
      counteryparty() const;
  inline ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >*
      mutable_counteryparty();
  
  // optional bool eventAdjusted = 6;
  inline bool has_eventadjusted() const;
  inline void clear_eventadjusted();
  static const int kEventAdjustedFieldNumber = 6;
  inline bool eventadjusted() const;
  inline void set_eventadjusted(bool value);
  
  // optional bool getRevision = 7;
  inline bool has_getrevision() const;
  inline void clear_getrevision();
  static const int kGetRevisionFieldNumber = 7;
  inline bool getrevision() const;
  inline void set_getrevision(bool value);
  
  // optional bool getSecurityId = 8;
  inline bool has_getsecurityid() const;
  inline void clear_getsecurityid();
  static const int kGetSecurityIdFieldNumber = 8;
  inline bool getsecurityid() const;
  inline void set_getsecurityid(bool value);
  
  // optional bool getDate = 9;
  inline bool has_getdate() const;
  inline void clear_getdate();
  static const int kGetDateFieldNumber = 9;
  inline bool getdate() const;
  inline void set_getdate(bool value);
  
  // @@protoc_insertion_point(class_scope:symbology.SeriesRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 startdate_;
  ::google::protobuf::int32 enddate_;
  ::google::protobuf::int32 asofdate_;
  ::google::protobuf::RepeatedPtrField< ::symbology::Security > security_;
  ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty > counteryparty_;
  bool eventadjusted_;
  bool getrevision_;
  bool getsecurityid_;
  bool getdate_;
  friend void  protobuf_AddDesc_Symbology_2dRPC_2eproto();
  friend void protobuf_AssignDesc_Symbology_2dRPC_2eproto();
  friend void protobuf_ShutdownFile_Symbology_2dRPC_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SeriesRequest* default_instance_;
};
// -------------------------------------------------------------------

class EntityRequest : public ::google::protobuf::Message {
 public:
  EntityRequest();
  virtual ~EntityRequest();
  
  EntityRequest(const EntityRequest& from);
  
  inline EntityRequest& operator=(const EntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityRequest& default_instance();
  
  void Swap(EntityRequest* other);
  
  // implements Message ----------------------------------------------
  
  EntityRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntityRequest& from);
  void MergeFrom(const EntityRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef EntityRequest_Entity Entity;
  static const Entity CURRENCY = EntityRequest_Entity_CURRENCY;
  static const Entity COUNTRY = EntityRequest_Entity_COUNTRY;
  static const Entity MARKET = EntityRequest_Entity_MARKET;
  static const Entity INSTRUMENT = EntityRequest_Entity_INSTRUMENT;
  static const Entity COUNTER_PARTY = EntityRequest_Entity_COUNTER_PARTY;
  static const Entity COMPANY = EntityRequest_Entity_COMPANY;
  static const Entity SECURITY = EntityRequest_Entity_SECURITY;
  static const Entity SYMBOL = EntityRequest_Entity_SYMBOL;
  static inline bool Entity_IsValid(int value) {
    return EntityRequest_Entity_IsValid(value);
  }
  static const Entity Entity_MIN =
    EntityRequest_Entity_Entity_MIN;
  static const Entity Entity_MAX =
    EntityRequest_Entity_Entity_MAX;
  static const int Entity_ARRAYSIZE =
    EntityRequest_Entity_Entity_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Entity_descriptor() {
    return EntityRequest_Entity_descriptor();
  }
  static inline const ::std::string& Entity_Name(Entity value) {
    return EntityRequest_Entity_Name(value);
  }
  static inline bool Entity_Parse(const ::std::string& name,
      Entity* value) {
    return EntityRequest_Entity_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated int32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();
  
  // optional bytes payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  
  // @@protoc_insertion_point(class_scope:symbology.EntityRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::std::string* payload_;
  static const ::std::string _default_payload_;
  friend void  protobuf_AddDesc_Symbology_2dRPC_2eproto();
  friend void protobuf_AssignDesc_Symbology_2dRPC_2eproto();
  friend void protobuf_ShutdownFile_Symbology_2dRPC_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static EntityRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// SubscriptionRequest

// repeated .symbology.Security security = 1;
inline int SubscriptionRequest::security_size() const {
  return security_.size();
}
inline void SubscriptionRequest::clear_security() {
  security_.Clear();
}
inline const ::symbology::Security& SubscriptionRequest::security(int index) const {
  return security_.Get(index);
}
inline ::symbology::Security* SubscriptionRequest::mutable_security(int index) {
  return security_.Mutable(index);
}
inline ::symbology::Security* SubscriptionRequest::add_security() {
  return security_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::symbology::Security >&
SubscriptionRequest::security() const {
  return security_;
}
inline ::google::protobuf::RepeatedPtrField< ::symbology::Security >*
SubscriptionRequest::mutable_security() {
  return &security_;
}

// repeated .symbology.CounterParty counterParty = 2;
inline int SubscriptionRequest::counterparty_size() const {
  return counterparty_.size();
}
inline void SubscriptionRequest::clear_counterparty() {
  counterparty_.Clear();
}
inline const ::symbology::CounterParty& SubscriptionRequest::counterparty(int index) const {
  return counterparty_.Get(index);
}
inline ::symbology::CounterParty* SubscriptionRequest::mutable_counterparty(int index) {
  return counterparty_.Mutable(index);
}
inline ::symbology::CounterParty* SubscriptionRequest::add_counterparty() {
  return counterparty_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >&
SubscriptionRequest::counterparty() const {
  return counterparty_;
}
inline ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >*
SubscriptionRequest::mutable_counterparty() {
  return &counterparty_;
}

// -------------------------------------------------------------------

// SeriesRequest

// optional int32 startDate = 1;
inline bool SeriesRequest::has_startdate() const {
  return _has_bit(0);
}
inline void SeriesRequest::clear_startdate() {
  startdate_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SeriesRequest::startdate() const {
  return startdate_;
}
inline void SeriesRequest::set_startdate(::google::protobuf::int32 value) {
  _set_bit(0);
  startdate_ = value;
}

// optional int32 endDate = 2;
inline bool SeriesRequest::has_enddate() const {
  return _has_bit(1);
}
inline void SeriesRequest::clear_enddate() {
  enddate_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SeriesRequest::enddate() const {
  return enddate_;
}
inline void SeriesRequest::set_enddate(::google::protobuf::int32 value) {
  _set_bit(1);
  enddate_ = value;
}

// optional int32 asOfDate = 3;
inline bool SeriesRequest::has_asofdate() const {
  return _has_bit(2);
}
inline void SeriesRequest::clear_asofdate() {
  asofdate_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SeriesRequest::asofdate() const {
  return asofdate_;
}
inline void SeriesRequest::set_asofdate(::google::protobuf::int32 value) {
  _set_bit(2);
  asofdate_ = value;
}

// repeated .symbology.Security security = 4;
inline int SeriesRequest::security_size() const {
  return security_.size();
}
inline void SeriesRequest::clear_security() {
  security_.Clear();
}
inline const ::symbology::Security& SeriesRequest::security(int index) const {
  return security_.Get(index);
}
inline ::symbology::Security* SeriesRequest::mutable_security(int index) {
  return security_.Mutable(index);
}
inline ::symbology::Security* SeriesRequest::add_security() {
  return security_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::symbology::Security >&
SeriesRequest::security() const {
  return security_;
}
inline ::google::protobuf::RepeatedPtrField< ::symbology::Security >*
SeriesRequest::mutable_security() {
  return &security_;
}

// repeated .symbology.CounterParty counteryParty = 5;
inline int SeriesRequest::counteryparty_size() const {
  return counteryparty_.size();
}
inline void SeriesRequest::clear_counteryparty() {
  counteryparty_.Clear();
}
inline const ::symbology::CounterParty& SeriesRequest::counteryparty(int index) const {
  return counteryparty_.Get(index);
}
inline ::symbology::CounterParty* SeriesRequest::mutable_counteryparty(int index) {
  return counteryparty_.Mutable(index);
}
inline ::symbology::CounterParty* SeriesRequest::add_counteryparty() {
  return counteryparty_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >&
SeriesRequest::counteryparty() const {
  return counteryparty_;
}
inline ::google::protobuf::RepeatedPtrField< ::symbology::CounterParty >*
SeriesRequest::mutable_counteryparty() {
  return &counteryparty_;
}

// optional bool eventAdjusted = 6;
inline bool SeriesRequest::has_eventadjusted() const {
  return _has_bit(5);
}
inline void SeriesRequest::clear_eventadjusted() {
  eventadjusted_ = false;
  _clear_bit(5);
}
inline bool SeriesRequest::eventadjusted() const {
  return eventadjusted_;
}
inline void SeriesRequest::set_eventadjusted(bool value) {
  _set_bit(5);
  eventadjusted_ = value;
}

// optional bool getRevision = 7;
inline bool SeriesRequest::has_getrevision() const {
  return _has_bit(6);
}
inline void SeriesRequest::clear_getrevision() {
  getrevision_ = false;
  _clear_bit(6);
}
inline bool SeriesRequest::getrevision() const {
  return getrevision_;
}
inline void SeriesRequest::set_getrevision(bool value) {
  _set_bit(6);
  getrevision_ = value;
}

// optional bool getSecurityId = 8;
inline bool SeriesRequest::has_getsecurityid() const {
  return _has_bit(7);
}
inline void SeriesRequest::clear_getsecurityid() {
  getsecurityid_ = false;
  _clear_bit(7);
}
inline bool SeriesRequest::getsecurityid() const {
  return getsecurityid_;
}
inline void SeriesRequest::set_getsecurityid(bool value) {
  _set_bit(7);
  getsecurityid_ = value;
}

// optional bool getDate = 9;
inline bool SeriesRequest::has_getdate() const {
  return _has_bit(8);
}
inline void SeriesRequest::clear_getdate() {
  getdate_ = false;
  _clear_bit(8);
}
inline bool SeriesRequest::getdate() const {
  return getdate_;
}
inline void SeriesRequest::set_getdate(bool value) {
  _set_bit(8);
  getdate_ = value;
}

// -------------------------------------------------------------------

// EntityRequest

// repeated int32 id = 1;
inline int EntityRequest::id_size() const {
  return id_.size();
}
inline void EntityRequest::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 EntityRequest::id(int index) const {
  return id_.Get(index);
}
inline void EntityRequest::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
}
inline void EntityRequest::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EntityRequest::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EntityRequest::mutable_id() {
  return &id_;
}

// optional bytes payload = 2;
inline bool EntityRequest::has_payload() const {
  return _has_bit(1);
}
inline void EntityRequest::clear_payload() {
  if (payload_ != &_default_payload_) {
    payload_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& EntityRequest::payload() const {
  return *payload_;
}
inline void EntityRequest::set_payload(const ::std::string& value) {
  _set_bit(1);
  if (payload_ == &_default_payload_) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void EntityRequest::set_payload(const char* value) {
  _set_bit(1);
  if (payload_ == &_default_payload_) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void EntityRequest::set_payload(const void* value, size_t size) {
  _set_bit(1);
  if (payload_ == &_default_payload_) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EntityRequest::mutable_payload() {
  _set_bit(1);
  if (payload_ == &_default_payload_) {
    payload_ = new ::std::string;
  }
  return payload_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace symbology

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::symbology::SubscriptionRequest_Series>() {
  return ::symbology::SubscriptionRequest_Series_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::symbology::SeriesRequest_Series>() {
  return ::symbology::SeriesRequest_Series_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::symbology::EntityRequest_Entity>() {
  return ::symbology::EntityRequest_Entity_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Symbology_2dRPC_2eproto__INCLUDED
